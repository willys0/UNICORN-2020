#!/usr/bin/env python
PACKAGE = "unicorn_docking"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


gen.add("x_desired_offset",       double_t,       0,      "The offset in x from the tag, (distance infront of tag) that the robot should dock to",     0.71,     0.0,    1.5 )
gen.add("y_desired_offset",       double_t,       0,      "The offset in y from the tag, (distance left/right of tag) that the robot should dock to",     .01,     -1.0,    1.0 )
gen.add("th_desired_offset",      double_t,       0,      "The rotational offset from tag, (0 is perpendicular)",     0.0,     -1.0 ,    1.0  )
gen.add("x_desired_retry_offset",       double_t,       0,      "The offset in x from the tag during undocking/retry, (distance infront of tag) that the robot should undock to",     1.6,     0.0,    2.0 )
gen.add("x_error_thresh",       double_t,       0,      "Forward acceptable error threshold",     .005,     0.0,    0.5 )
gen.add("y_error_thresh",       double_t,       0,      "Lateral acceptable error threshold",     .01,     0.0,    0.5 )
gen.add("th_error_thresh",      double_t,       0,      "Angular acceptable error threshold",     .02,     0.0,    0.5 )
gen.add("a",                    double_t,       0,      "a",                                      -0.02,   -10.0,  10.0)
gen.add("b",                    double_t,       0,      "b",                                      10,     -10.0,  10.0)
gen.add("c",                    double_t,       0,      "c",                                      -3.9,    -10.0,  10.0)
gen.add("max_docking_speed",    double_t,       0,      "Max forward/backwards speed during docking", 0.15, 0.0, 1.0)
gen.add("max_undocking_speed",  double_t,       0,      "Max forward/backwards speed during undocking", 0.15, 0.0, 1.0)
gen.add("max_rotation_speed",  double_t,       0,      "Max rotation speed during docking/undocking", 0.2, 0.0, 1.0) 
gen.add("max_tf_lookup_time",  double_t,       0,      "Max time the tflookup can go into the past to a tf it no longer knows", 5, 0.0, 15.0) 
gen.add("min_dist_to_object_infront",  double_t,       0,      "Minimum distance [m] to an object infront of robot before it stops", 0.3, 0.0, 10.0)
gen.add("min_dist_to_object_behind",  double_t,       0,      "Minimum distance [m] to an object behind the robot before it stops", 0.2, 0.0, 1.0)
gen.add("min_dist_to_wall",  double_t,       0,      "min allowed distance to wall [m]", 0.05, 0, 0.2)
gen.add("rear_lidar_angle_offset",  double_t,       0,      "the correction angle to combat the rear lidar missalignment", -0.0025, -0.2, 0.2)
gen.add("lidar_contrib_factor",  double_t,       0,      "", 40, 0, 100)
gen.add("lidar_contrib_offset",  double_t,       0,      "", 1, 1, 100)


exit(gen.generate(PACKAGE, "unicorn_docking_node", "DockingController"))
