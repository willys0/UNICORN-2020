<?xml version="1.0" encoding="utf-8"?>
<!-- This URDF was automatically created by SolidWorks to URDF Exporter! Originally created by Stephen Brawner (brawner@gmail.com) 
     Commit Version: 1.6.0-1-g15f4949  Build Version: 1.6.7594.29634
     For more information, please see http://wiki.ros.org/sw_urdf_exporter -->
<robot name="unicorn" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:arg name="robot_namespace" default="/" />
  <xacro:arg name="sim" default="false" />

    <!-- Swivel wheel -->
  <xacro:include filename="$(find am_description)/urdf/swivel_wheel.urdf.xacro" />

    <!-- Wheel -->
  <xacro:include filename="$(find am_description)/urdf/wheel.urdf.xacro" />

    <!-- camera pack-->
  <xacro:include filename="$(find unicorn_description)/urdf/stereo_camera_gazebo.urdf.xacro" />

   <!-- lidar pack-->
  <xacro:include filename="$(find unicorn_description)/urdf/lidar_gazebo.urdf.xacro" />

  <xacro:property name="M_PI" value="3.1415926535897931" />
  <xacro:property name="M_PI2" value="1.57079632679" />
  <!-- base -->
    <xacro:property name="base_x_size" value="0.72" />
  <xacro:property name="base_y_size" value="0.55" />
  <xacro:property name="base_z_size" value="0.6" />
  <xacro:property name="base_mass" value="21.446" /> <!-- 21.446 in kg-->

  <!-- Front Lidar -->
  <xacro:arg name="laser_xyz" default="-0.0214 -0.0049 0.465" />
  <xacro:arg name="laser_rpy" default="0 0 0" />
  <xacro:arg name="frontlidar_meshfile" default="package://unicorn_description/meshes/base_laser.STL" />

<!-- Rear Lidar  -->
  <xacro:arg name="rear_laser_xyz" default="-0.42145 -0.00645 0.28652" />
  <xacro:arg name="rear_laser_rpy" default="0 0 ${M_PI}" />
  <xacro:arg name="rearlidar_meshfile" default="package://unicorn_description/meshes/rear_lidar.STL" />

  <!-- Zed Camera -->
  <xacro:arg name="zed_xyz" default="0.03112 -0.00552 0.36395" />
  <xacro:arg name="zed_rpy" default="0 0 0" />
  <xacro:arg name="zed_meshfile" default="package://unicorn_description/meshes/zed_link.STL" />

  <!-- Real Sense -->
  <xacro:arg name="real_rgb_xyz" default="-0.4065 -0.03882 0.33658" />
  <xacro:arg name="real_depth_xyz" default="-0.4065 -0.00518 0.33658" />
  <xacro:arg name="real_rpy" default="0 0 ${M_PI}" />
  <xacro:arg name="realsense_meshfile" default="package://unicorn_description/meshes/real_sense.STL" />
  

 <!-- Main Body-base -->
  <link
    name="chassis_link">
    <inertial>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <mass
        value="15" />
      <inertia
        ixx="1"
        ixy="0"
        ixz="3"
        iyy="3"
        iyz="3"
        izz="1" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://unicorn_description/meshes/chassis_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.792156862745098 0.819607843137255 0.933333333333333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://unicorn_description/meshes/chassis_link.STL" />
      </geometry>
    </collision>
  </link>

<!-- Lift -->
  <link
    name="lift_link">
    <inertial>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <mass
        value="4" />
      <inertia
        ixx="1"
        ixy="0"
        ixz="3"
        iyy="3"
        iyz="3"
        izz="1" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://unicorn_description/meshes/lift_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.752941176470588 0.752941176470588 0.752941176470588 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://unicorn_description/meshes/lift_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="lift_joint"
    type="fixed">
    <origin
      xyz="0 0 0"
      rpy="0 0 0" />
    <parent
      link="chassis_link" />
    <child
      link="lift_link" />
    <axis
      xyz="0 0 0" />
    <joint_properties damping="0.0" friction="0.0" />
  </joint>

  



  <!-- driving wheels -->
  <wheel fb="back" lr="left" parent="chassis_link" translateY="0.25" translateX="0" translateZ="0.122" wheel_radius="0.122" wheel_height="0.032" flip="1"/>
  <wheel fb="back" lr="right" parent="chassis_link" translateY="-0.25" translateX="0 " translateZ="0.122" wheel_radius="0.122" wheel_height="0.032" flip="1"/>
  

  <!-- others wheels -->
  <swivel_wheel fb="front" lr="left" parent="chassis_link" translateY="0.16" translateX="-0.355" translateZ="0.1526" wheel_radius="0.05" wheel_height="0.05" flip="0"/>
  <swivel_wheel fb="front" lr="right" parent="chassis_link" translateY="-0.16" translateX="-0.355" translateZ="0.1526" wheel_radius="0.05" wheel_height="0.05" flip="0"/>



 <!-- Front Lidar -->
  <lidar_gazebo frame="base_laser" topic="frontLidar/scan" simulation="$(arg sim)" sample_size="800" min_angle="-2.35619" max_angle="2.35619" robot_namespace="$(arg robot_namespace)" filename="$(arg frontlidar_meshfile)" />

  <joint name="laser_mount_joint" type="fixed">
    <origin xyz="$(arg laser_xyz)" rpy="$(arg laser_rpy)" />
    <parent link="chassis_link" />
    <child link="base_laser" />
  </joint>
  

   <!-- Back Lidar -->
  <lidar_gazebo frame="rear_laser" topic="rearLidar/scan" simulation="$(arg sim)" sample_size="11" min_angle="-0.767944871" max_angle="0.767944871" robot_namespace="$(arg robot_namespace)" filename="$(arg rearlidar_meshfile)"/>

  <joint name="rear_laser_mount_joint" type="fixed">
    <origin xyz="$(arg rear_laser_xyz)" rpy="$(arg rear_laser_rpy)" />
    <parent link="chassis_link" />
    <child link="rear_laser" />
  </joint>

  <!-- Zed Camera -->
    <stereo_camera frame_rgb="zed_camera" frame_depth="zed_depth_joint" cameraName="zed" simulation="$(arg sim)" filename="$(arg zed_meshfile)"  topic="pointcloud" robot_namespace="$(arg robot_namespace)"/>

    <joint name="zed_camera_rgb_joint" type="fixed"> 
      <origin xyz="$(arg zed_xyz)" rpy="$(arg zed_rpy)"/>
      <parent link="chassis_link"/>  
      <child link="zed_camera"/>
    </joint>

    <joint name="zed_camera_depth_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
      <parent link="zed_camera"/>
      <child link="zed_depth_joint"/>
    </joint>


  <!-- realsense Camera -->


    <stereo_camera frame_rgb="realsense_camera" frame_depth="realsense_depth" cameraName="realsense" simulation="$(arg sim)" filename="$(arg realsense_meshfile)"  topic="pointcloud" robot_namespace="$(arg robot_namespace)"/>

    <joint name="realsense_gb_joint" type="fixed"> 
      <origin xyz="$(arg real_rgb_xyz)" rpy="$(arg real_rpy)"/>
      <parent link="chassis_link"/>  
      <child link="realsense_camera"/>
    </joint>

    <joint name="realsense_depth_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
      <parent link="realsense_camera"/>
      <child link="realsense_depth"/>
    </joint>


<xacro:if value="$(arg sim)">
  <!-- GPS -->
  <gazebo>
    <plugin name="novatel_gps_sim" filename="libhector_gazebo_ros_gps.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>5</updateRate>
      <frameId>odom_chassis</frameId>
      <bodyName>chassis_link</bodyName>
      <topicName>gps</topicName>
      <velocityTopicName>gps_velocity</velocityTopicName>
      <drift>5.0 5.0 5.0</drift>
      <gaussianNoise>0.1 0.1 0.1</gaussianNoise>
      <velocityDrift>0 0 0</velocityDrift>
      <velocityGaussianNoise>0.1 0.1 0.1</velocityGaussianNoise>
    </plugin>
  </gazebo>
</xacro:if> 
 
  
<xacro:if value="$(arg sim)">
  <!-- GAZEBO STUFF -->
  <gazebo>
    <plugin name="automower_gazebo_controller" filename="libam_gazebo_controller_2wd.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>100.0</updateRate>
      <leftJoint>back_right_wheel_joint</leftJoint>
      <rightJoint>back_left_wheel_joint</rightJoint>
      <wheelSeparation>0.4645</wheelSeparation>
      <wheelDiameter>0.245</wheelDiameter>
      <wheelTorque>100</wheelTorque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>wheelencoder/odom</odometryTopic>
      <odometryFrame>odom_chassis</odometryFrame>
      <robotBaseFrame>chassis_link</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishWheelJointState>false</publishWheelJointState>


      <gaussianNoise>0.1</gaussianNoise>
      <accelDrift>0.5 0.5 0.5</accelDrift>
      <accelGaussianNoise>0.35 0.35 0.3</accelGaussianNoise>
      <rateDrift>0.1 0.1 0.1</rateDrift>
      <rateGaussianNoise>0.05 0.05 0.015</rateGaussianNoise>
      <headingDrift>0.1</headingDrift>
      <headingGaussianNoise>1.00</headingGaussianNoise>
    </plugin>


    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so" />

    <plugin name="imu_plugin" filename="libhector_gazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>chassis_link</bodyName>
      <topicName>zed/imu</topicName>
      <serviceName>imu_service</serviceName>
      <updateRate>100.0</updateRate>
      <rpyOffsets>0 ${M_PI} 0</rpyOffsets> 
  <!---->
        <gaussianNoise>0.1</gaussianNoise>
        <accelDrift>0.1 0.1 0.1</accelDrift>
        <accelGaussianNoise>0.35 0.35 0.3</accelGaussianNoise>
        <rateDrift>0.1 0.1 0.1</rateDrift>
        <rateGaussianNoise>0.05 0.05 0.015</rateGaussianNoise>
        <headingDrift>0.1</headingDrift>
        <headingGaussianNoise>1.00</headingGaussianNoise>
  <!-- deprecated
      <gaussianNoise>0.0</gaussianNoise>  
        <accelDrift>0.0 0.0 0.0</accelDrift>
        <accelGaussianNoise>0.0 0.0 0.0</accelGaussianNoise>
        <rateDrift>0.0 0.0 0.0</rateDrift>
        <rateGaussianNoise>0.0 0.0 0.0</rateGaussianNoise>
        <headingDrift>0.0</headingDrift>
        <headingGaussianNoise>0.00</headingGaussianNoise>-->
    </plugin> 


    <plugin name="am_gazebo_wheelencoder" filename="libam_gazebo_wheelencoder.so">
  </plugin>

  </gazebo>
</xacro:if> 

<xacro:unless value="$(arg sim)">
  <!-- GAZEBO STUFF for unicorn -->
  <gazebo>
    <plugin name="automower_gazebo_controller" filename="libam_gazebo_controller_2wd.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>100.0</updateRate>
      <leftJoint>back_right_wheel_joint</leftJoint>
      <rightJoint>back_left_wheel_joint</rightJoint>
      <wheelSeparation>0.4645</wheelSeparation>
      <wheelDiameter>0.245</wheelDiameter>
      <wheelTorque>100</wheelTorque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>wheelencoder/odom</odometryTopic>
      <odometryFrame>odom_gazebo</odometryFrame>
      <robotBaseFrame>chassis_link_gazebo</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishWheelJointState>false</publishWheelJointState>
    </plugin>

    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so" />

    <plugin name="imu_plugin" filename="libhector_gazebo_ros_imu.so">
    <alwaysOn>false</alwaysOn>
    <bodyName>chassis_link_gazebo</bodyName>
    <topicName>imu</topicName>
    <serviceName>imu_service</serviceName>
    <updateRate>100.0</updateRate>
    <rpyOffsets>0 0 0</rpyOffsets> <!-- deprecated -->
<!--
      <gaussianNoise>0.1</gaussianNoise>
      <accelDrift>0.5 0.5 0.5</accelDrift>
      <accelGaussianNoise>0.35 0.35 0.3</accelGaussianNoise>
      <rateDrift>0.1 0.1 0.1</rateDrift>
      <rateGaussianNoise>0.05 0.05 0.015</rateGaussianNoise>
      <headingDrift>0.1</headingDrift>
      <headingGaussianNoise>1.00</headingGaussianNoise>-->

    </plugin>


    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so" />


    <plugin name="imu_plugin" filename="libhector_gazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>chassis_link</bodyName>
      <topicName>zed/imu</topicName>
      <serviceName>imu_service</serviceName>
      <updateRate>10.0</updateRate>
      <rpyOffsets>0 0 0</rpyOffsets> <!-- deprecated -->
  <!--
        <gaussianNoise>0.1</gaussianNoise>
        <accelDrift>0.5 0.5 0.5</accelDrift>
        <accelGaussianNoise>0.35 0.35 0.3</accelGaussianNoise>
        <rateDrift>0.1 0.1 0.1</rateDrift>
        <rateGaussianNoise>0.05 0.05 0.015</rateGaussianNoise>
        <headingDrift>0.1</headingDrift>
        <headingGaussianNoise>1.00</headingGaussianNoise>-->

  <!-- deprecated -->
      <gaussianNoise>0.0</gaussianNoise>  
        <accelDrift>0.0 0.0 0.0</accelDrift>
        <accelGaussianNoise>0.0 0.0 0.0</accelGaussianNoise>
        <rateDrift>0.0 0.0 0.0</rateDrift>
        <rateGaussianNoise>0.0 0.0 0.0</rateGaussianNoise>
        <headingDrift>0.0</headingDrift>
        <headingGaussianNoise>0.00</headingGaussianNoise>
    </plugin>


    <plugin name="am_gazebo_wheelencoder" filename="libam_gazebo_wheelencoder.so">
  </plugin> 
  </gazebo>
</xacro:unless> 














 <!--
  

    <gazebo reference="chassis_link">
    <sensor name="automower_sensor" type="contact">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <contact>
        <collision>base_link_collision</collision>
      </contact>
      <plugin name="automower_sensors_plugin" filename="libam_gazebo_sensors.so">
        <always_on>true</always_on>
        <update_rate>20</update_rate>
        <bumperTopicName>sensor_status</bumperTopicName>
        <loopTopicName>loop</loopTopicName>
        <loopOutsideSensors>15</loopOutsideSensors>
      </plugin>
    </sensor>
  </gazebo>-->


</robot>