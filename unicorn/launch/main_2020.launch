<?xml version="1.0" encoding="utf-8"?>
<launch>

	<!-- roslaunch arguments -->
	<arg name="scan_topic" 			default="/frontLidar/scan"/>
	<arg name="map_file"   			default="$(find unicorn_slam)/maps/c2.yaml"/>

	<arg name="do_slam" 	        default="true" />

	<arg name="use_zed"						default="true" />
	<arg name="use_realsense"			default="true" />

	<arg name="use_object_tracking" default="false" />

	<arg name="sim" 				default="false" />


	<include file="$(find unicorn)/launch/components/control.launch" >
		<arg name="sim" value="$(arg sim)" />
	</include>

	<group unless="$(arg sim)">
		<include file="$(find unicorn)/launch/components/sensors.launch">
			<arg name="use_zed" value="$(arg use_zed)" />
			<arg name="use_realsense" value="$(arg use_realsense)" />
		</include>

		<include file="$(find unicorn_roborio_bridge)/launch/bridge.launch" />
	</group>


	<include file="$(find unicorn_navigation)/launch/move_base.launch" >
		<arg name="sim" value="$(arg sim)" />
	</include>

	<group if="$(arg do_slam)">
		<include file="$(find unicorn)/launch/components/slam.launch">
			<arg name="scan_topic" value="$(arg scan_topic)" />
		</include>
	</group>

	<group unless="$(arg do_slam)">
		<!-- Christian: not sure wtf this does -->
		<rosparam param="global_local">false</rosparam>

		<!-- Run the map server -->
		<node pkg="map_server" type="map_server" args="$(arg map_file)" respawn="true" name="map" />
		<node pkg="tf" type="static_transform_publisher" name="map_transform" args="0 0 0 0 0 0 /map /odom_chassis 100"/>

	</group>


	<!--- Run AMCL -->
	<group unless="$(arg do_slam)">
		<group unless="$(arg sim)">
			<node pkg="amcl" type="amcl" name="amcl" output="screen">
				<rosparam command="load" file="$(find unicorn_slam)/config/amcl_sim.yaml"/>
				<remap from="scan" to="$(arg scan_topic)"/>
			</node>
		</group>
		<group if="$(arg sim)">
		<!-- -->
			<node pkg="amcl" type="amcl" name="amcl" output="screen">
				<rosparam if="$(arg sim)" command="load" file="$(find unicorn_slam)/config/amcl_sim.yaml"/>
				<remap from="scan" to="$(arg scan_topic)"/>
			</node>

		</group>
	</group>

	<!-- load joint controller configurations from YAML file to parameter server -->
	<rosparam file="$(find am_control)/config/joint_position_control.yaml" command="load" />

	<!-- publish all the frames to TF -->

	<group if="$(arg sim)">
		<include file="$(find unicorn)/launch/components/gazebo.launch" />
	</group>

	<param unless="$(arg sim)" name="robot_description" command="$(find xacro)/xacro.py '$(find unicorn_description)/urdf/unicorn_target.urdf.xacro'" />

	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
		<param name="publish_frequency" value="100"/>
	</node>

	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
		<param name="use_gui" value="false"/>
		<param name="rate" value="100"/>
	</node>

	<node pkg="robot_localization" type="ekf_localization_node" name="odom_localization_node" clear_params="true">
		<rosparam unless="$(arg sim)" command="load" file="$(find unicorn)/config/sim/unicorn_EKF.yaml" />
		<rosparam if="$(arg sim)" command="load" file="$(find unicorn)/config/sim/unicorn_sim_EKF.yaml" />
	</node>

</launch>
