<?xml version="1.0" encoding="utf-8"?>
<launch>

	<!-- roslaunch arguments -->
	<arg name="scan_topic" 			default="/frontLidar/scan"/>
	<arg name="map_file"   			default="$(find unicorn_slam)/maps/work_room.yaml"/>

	<arg name="do_slam" 	        default="true" />
	<arg name="use_camera"			default="true" />
	<arg name="use_object_tracking" default="false" />

	<arg name="sim" 				default="false" />

	<include file="$(find unicorn)/launch/components/control.launch" />

	<include file="$(find unicorn)/launch/components/sensors.launch">
		<arg name="use_zed" value="$(arg use_camera)" />
	</include>
	
	<include file="$(find unicorn_navigation)/launch/move_base.launch" />

	<group if="$(arg do_slam)">
		<include file="$(find unicorn)/launch/components/slam.launch">
			<arg name="scan_topic" value="$(arg scan_topic)" />
		</include>
	</group>

	<group unless="$(arg do_slam)">
		<!-- Christian: not sure wtf this does -->
		<rosparam param="global_local">false</rosparam>

		<!-- Run the map server -->
		<node pkg="map_server" type="map_server" args="$(arg map_file)" respawn="true" name="map" />

	</group>


	<!--- Run AMCL -->
	<group unless="$(arg sim)">
		<node pkg="amcl" type="amcl" name="amcl" output="screen">
			<rosparam command="load" file="$(find unicorn_slam)/config/amcl.yaml"/>
		</node>
	</group>
	<group if="$(arg sim)">
		<node pkg="amcl" type="amcl" name="amcl" output="screen">
			<rosparam if="$(arg sim)" command="load" file="$(find unicorn_slam)/config/amcl_sim.yaml"/>
			<remap from="scan" to="$(arg scan_topic)"/>
		</node>
	</group>

	<!-- load joint controller configurations from YAML file to parameter server -->
	<rosparam file="$(find am_control)/config/joint_position_control.yaml" command="load" />

	<!-- publish all the frames to TF -->

	<group if="$(arg sim)">
		<include file="$(find unicorn)/launch/components/gazebo.launch" />
	</group>

	<param unless="$(arg sim)" name="robot_description" command="$(find xacro)/xacro.py '$(find unicorn_description)/urdf/unicorn_target.urdf.xacro'" />

	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
		<param name="publish_frequency" value="50"/>
	</node>

	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
		<param name="use_gui" value="false"/>
	</node>

	<node pkg="tf" type="static_transform_publisher" name="map_transform" args="0 0 0 0 0 0 /map /odom_chassis 100000"/>

	<include if="$(arg sim)" file="$(find unicorn)/launch/unicorn_GPS_to_UWB.launch"/>
	<node pkg="robot_localization" type="ekf_localization_node" name="odom_localization_node" clear_params="true">
		<rosparam unless="$(arg sim)" command="load" file="$(find unicorn)/config/unicorn_EKF.yaml" />
		<rosparam if="$(arg sim)" command="load" file="$(find unicorn)/config/sim/unicorn_EKF.yaml" />
	</node>

</launch>
