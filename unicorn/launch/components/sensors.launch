<?xml version="1.0" encoding="utf-8"?>
<launch>
    <arg name="sim"           default="false" />
    <arg name="use_zed"       default="true" />
    <arg name="use_realsense" default="true" />

    <group unless="$(arg sim)">
        <!-- Start R2000 Lidar node -->
        <node pkg="pepperl_fuchs_r2000" type="r2000_node" name="TX2_r2000Lidar" output="screen">
            <param name="scanner_ip" value="10.0.0.3"/>
            <param name="frame_id" value="base_laser"/>
            <param name="scan_frequency" value="30"/>
            <param name="samples_per_scan" value="1200"/>
            <param name="start_angle" value="-1200000"/>

            <remap from="/TX2_r2000Lidar/laserScan" to="/frontLidar/scan" />
        </node>

        <!-- Run realsense camera -->
        <group if="$(arg use_realsense)">
            <include file="$(find realsense2_camera)/launch/rs_camera.launch">
                <arg name="camera" value="realsense" />
            </include>
        </group>

        <!-- Run zed camera -->
        <group if="$(arg use_zed)">
            <remap from="/odom" to="/zed/odom" />
            <remap from="/point_cloud/cloud_registered" to="/zed/depth/points" />

            <node pkg="nodelet" type="nodelet" name="zed_nodelet_manager" args="manager" output="screen" />

            <include file="$(find zed_wrapper)/launch/zed_camera_nodelet.launch">
                <arg name="nodelet_manager_name" value="zed_nodelet_manager" />
                <arg name="gpu_id" value="-1"/>
                <arg name="publish_tf" value="false"/>
                <arg name="publish_urdf" value="true"/>
                <!--<arg name="odometry_frame" value="/zed/odom"/>
                <arg name="base_frame" value="zed_camera"/>--><!--Default: zed_center-->
                <!--arg name="camera_frame" value="zed_left_camera"/-->
                <!--arg name="depth_frame" value="zed_depth_camera"/-->
            </include>

            <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid zed_nodelet_manager" output="screen">
                <remap from="~input" to="/zed/depth/points" />
                <remap from="~output" to="/zed/depth/points_filtered" />
                <rosparam>
                    filter_field_name: z
                    filter_limit_min: -0.10
                    filter_limit_max: 3.0
                    filter_limit_negative: False
                    leaf_size: 0.15
                </rosparam>
            </node>
        </group>
    </group>
    <group if="$(arg sim)">
        <group if="$(arg use_zed)">
            <remap from="/odom" to="/zed/odom" />
            <remap from="/point_cloud/cloud_registered" to="/zed/depth/points" />

            <node pkg="nodelet" type="nodelet" name="zed_nodelet_manager" args="manager" output="screen" />
            <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid zed_nodelet_manager" output="screen">
                <remap from="~input" to="/zed/depth/points" />
                <remap from="~output" to="/zed/depth/points_filtered" />
                <rosparam>
                    filter_field_name: y
                    filter_limit_min: -1.0
                    filter_limit_max: 0.35
                    filter_limit_negative: False
                    leaf_size: 0.15
                </rosparam>
            </node>
        </group>
    </group>
</launch>
